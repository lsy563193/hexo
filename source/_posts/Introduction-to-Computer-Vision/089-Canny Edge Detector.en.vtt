WEBVTT
Kind: captions
Language: en

00:00:00.110 --> 00:00:02.890
So, to illustrate the Canny edge detector,

00:00:02.890 --> 00:00:04.770
I'm going to use this picture of Lena.

00:00:04.770 --> 00:00:08.550
Now, this was a picture that was used for image processing a lot.

00:00:08.550 --> 00:00:12.880
Some guy, he cut out just the top part of a picture of 1972,

00:00:12.880 --> 00:00:16.470
that, of Lena Soderberg, I think was her name.

00:00:16.470 --> 00:00:19.490
Because it appeared in a a men's magazine.

00:00:19.490 --> 00:00:20.520
So he used just the picture.

00:00:20.520 --> 00:00:22.390
And by the way, this is Lena recently.

00:00:22.390 --> 00:00:24.180
So we all change.

00:00:24.180 --> 00:00:26.170
But here is our Lena image.

00:00:26.170 --> 00:00:30.470
And if we were to take just the magnitude of the gradient,

00:00:30.470 --> 00:00:31.850
we get a value that looks like this.

00:00:31.850 --> 00:00:36.700
You see it's close to edges, but actually, you and I see edges, right?

00:00:36.700 --> 00:00:38.890
It's just a gradient image, all right?

00:00:38.890 --> 00:00:40.810
So then we can threshold that gradient.

00:00:40.810 --> 00:00:43.030
So now you can see a bunch of that stuff has gone away.

00:00:43.030 --> 00:00:46.890
So anything with a gradient that's not high enough has been removed.

00:00:46.890 --> 00:00:48.800
And then we do an operation called thinning and

00:00:48.800 --> 00:00:50.130
we'll talk more about this in a minute.

00:00:50.130 --> 00:00:53.000
The fancy name is non-maximal suppression.

00:00:53.000 --> 00:00:56.910
Basically saying if I've got a bunch of points that exceed a threshold locally,

00:00:56.910 --> 00:00:59.620
let me only pull out the point that exceeds it the most.

00:00:59.620 --> 00:01:00.770
We'll talk about that in a second.

00:01:00.770 --> 00:01:03.831
When you do that, you get something that looks like that, all right?

00:01:03.831 --> 00:01:08.930
So that you go back and you can see there's the thinned version of that.

00:01:08.930 --> 00:01:12.270
Just a quick note about why you have to do the thinning, all right?

00:01:12.270 --> 00:01:15.116
So let's take a look at this little area here.

00:01:15.116 --> 00:01:21.515
You can see that there is this kind of thick part that exceeds the threshold.

00:01:21.515 --> 00:01:24.860
And what we would like to say is that there's an edge running through

00:01:24.860 --> 00:01:26.070
the middle.

00:01:26.070 --> 00:01:28.060
So you think about it, if you're coming across here,

00:01:28.060 --> 00:01:33.160
you might see a profile that starts low and then goes up high, all right?

00:01:33.160 --> 00:01:35.620
And if you take the derivative of that,

00:01:35.620 --> 00:01:40.830
you'll see that the derivative over this area is above this threshold.

00:01:40.830 --> 00:01:43.437
So that gives you this thick edge.

00:01:43.437 --> 00:01:45.330
And we want to turn it into a thin edge.

00:01:45.330 --> 00:01:48.320
So the way the non-maximal suppression,

00:01:48.320 --> 00:01:51.180
the thinning is done in a canny operator is as follows.

00:01:51.180 --> 00:01:53.010
And you don't act, you're not going to have to implement this,

00:01:53.010 --> 00:01:55.230
I just want you to be aware of what's going on.

00:01:55.230 --> 00:02:01.910
Basically it finds areas of high gradient, and it looks across

00:02:01.910 --> 00:02:06.730
in the direction of the gradient, and it finds just the peak there.

00:02:06.730 --> 00:02:10.100
And then over here same thing, you would find the peak here.

00:02:10.100 --> 00:02:14.320
Here the gradient is in that direction, so would find the peak there, right?

00:02:14.320 --> 00:02:16.590
Sometimes, and that's what this picture's showing here,

00:02:16.590 --> 00:02:18.180
sometimes you have to interpolate, right?

00:02:18.180 --> 00:02:20.880
You find the gradient, you say okay, I think it's somewhere in

00:02:20.880 --> 00:02:24.230
between two pixels, so you can actually get sub-pixel accuracy.

00:02:24.230 --> 00:02:27.350
But the point is, that it basically looks perpendicular to the gradient,

00:02:27.350 --> 00:02:29.500
in order to find, the maximum.

00:02:29.500 --> 00:02:32.350
So that's how you do the, the thinning part, and

00:02:32.350 --> 00:02:35.450
now there's one very clever detail to look at, all right?

00:02:35.450 --> 00:02:39.280
If you take a look at this point sort of under the chin here,

00:02:39.280 --> 00:02:45.180
you'll see that some of the pixels did not survive the thresholding, okay?

00:02:45.180 --> 00:02:47.190
And it's a problem because we, maybe we,

00:02:47.190 --> 00:02:48.810
you can say we had too high a threshold.

00:02:48.810 --> 00:02:51.630
But the problem is if we make the threshold too low.

00:02:51.630 --> 00:02:54.340
Then a whole bunch of stuff is going to show up that we don't

00:02:54.340 --> 00:02:55.570
actually care about.

00:02:55.570 --> 00:02:57.620
So the question is how to deal with that.

00:02:57.620 --> 00:03:00.850
So this is what John did in the, the hysteresis.

00:03:00.850 --> 00:03:05.450
The first thing we do is we apply a high threshold to detect edge,

00:03:05.450 --> 00:03:07.170
strong edge pixels.

00:03:07.170 --> 00:03:10.220
So the threshold pulls out a bunch of pixels.

00:03:10.220 --> 00:03:15.140
Then what we do is we can link those strong edge pixels to form strong edges.

00:03:15.140 --> 00:03:17.260
Okay. So far not so clever.

00:03:17.260 --> 00:03:19.300
Here's where the clever part becomes.

00:03:19.300 --> 00:03:27.441
We now apply a low threshold to find weak, but possible edge pixels.

00:03:27.441 --> 00:03:33.770
And then, we extend the strong edges following the weak pixels.

00:03:33.770 --> 00:03:37.520
So what that means is that if an edge only has weak pixels on it,

00:03:37.520 --> 00:03:39.400
it doesn't get found to be an edge.

00:03:39.400 --> 00:03:44.010
An edge can only be found if some of the pixels are strong-edge pixels.

00:03:44.010 --> 00:03:47.160
The assumption here is that all edges that I

00:03:47.160 --> 00:03:50.180
care about will have some strong pixels in them.

00:03:50.180 --> 00:03:53.110
And then, I might have to continue through a weak area, but

00:03:53.110 --> 00:03:55.540
the edge got initiated by the strong detections.

