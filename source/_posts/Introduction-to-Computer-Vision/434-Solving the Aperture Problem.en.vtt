WEBVTT
Kind: captions
Language: en

00:00:00.640 --> 00:00:03.140
So how are we going to
solve the aperture problem?

00:00:03.140 --> 00:00:05.790
Well, look,
the basic idea is the same as before,

00:00:05.790 --> 00:00:09.670
we have to impose some sort of
constraints, but this time we're

00:00:09.670 --> 00:00:14.090
going to impose some local constraints
to get more equations per pixel.

00:00:14.090 --> 00:00:18.690
So for example, We talked about
maybe we'll assume that locally

00:00:18.690 --> 00:00:22.670
right around this point,
the motion field is very smooth.

00:00:22.670 --> 00:00:25.300
In fact how smooth do we want to assume?

00:00:25.300 --> 00:00:28.300
How bout we assume that it's
actually the same value.

00:00:28.300 --> 00:00:30.270
That is over a window,

00:00:30.270 --> 00:00:34.930
we're going to assume that u v
is the same value everywhere.

00:00:34.930 --> 00:00:40.300
So if we were using, let's say a five
by five window, so there's 25 pixels,

00:00:40.300 --> 00:00:45.200
if we were assuming that there
was one u v for all of these,

00:00:45.200 --> 00:00:47.890
the uv for, let's say, the center pixel.

00:00:47.890 --> 00:00:51.910
That would give us 25
equations per pixel.

00:00:51.910 --> 00:00:55.390
And here they are so,
what we've got here is, here's our u and

00:00:55.390 --> 00:00:59.140
v that we're assuming is
the u v of some center pixel.

00:00:59.140 --> 00:01:03.830
And here we have 25 rows
of the derivative on x and

00:01:03.830 --> 00:01:08.120
the derivative in y at
each of those 25 points.

00:01:08.120 --> 00:01:13.090
And th, this, these are the gradients,
dotted with u v equals the negative,

00:01:13.090 --> 00:01:17.250
and here is the temporal derivatives
at each of those points.

00:01:17.250 --> 00:01:22.160
So I can write that as a d equals b,
where d is this

00:01:22.160 --> 00:01:27.430
displacement vector u v and
b is just this 25 by 1 vector,

00:01:27.430 --> 00:01:30.950
that is essentially the negative
of all the temporal derivatives.

00:01:30.950 --> 00:01:34.370
Okay, so
we have this equation a d equals b and

00:01:34.370 --> 00:01:36.910
it's got 25 equations and two unknowns.

00:01:36.910 --> 00:01:39.770
All right, well, so
that's a little bit of a problem.

00:01:39.770 --> 00:01:43.600
How do we solve a system when we
have more equations than unknowns?

00:01:43.600 --> 00:01:46.500
Well We do our standard
least square solution.

00:01:46.500 --> 00:01:48.580
When we have an equation like this,
we say,

00:01:48.580 --> 00:01:52.530
well, we're going to minimize
the square difference, okay.

00:01:52.530 --> 00:01:56.770
And they way you do that is by using
the standard pseudo uh,inverse method.

00:01:56.770 --> 00:01:59.670
So we multiply a by a transpose.

00:01:59.670 --> 00:02:03.856
And since a is 25 by 2,
a trans-flows is 2 by 25, so

00:02:03.856 --> 00:02:09.348
a transpose is just a 2 by 2 and d is
a 2 by 1, and a transpose b is a 2 by 1,

00:02:09.348 --> 00:02:13.730
and we end up with this
equation right here, okay?

00:02:13.730 --> 00:02:16.520
And these have the terms written out.

00:02:16.520 --> 00:02:20.220
And these sums are summed over
whatever the window is it

00:02:20.220 --> 00:02:21.100
that you're summing over.

00:02:21.100 --> 00:02:24.920
So it's five by five would be over
all those 25 pixels and over here,

00:02:24.920 --> 00:02:28.890
you just have the product of the,
the sum of the product of the,

00:02:28.890 --> 00:02:31.390
image gradient and
times the temporal gradient.

00:02:31.390 --> 00:02:33.380
This is our, what we have to solve,
and by the way,

00:02:33.380 --> 00:02:37.550
this technique was first profos,
proposed by Luke Scigotti way back in

00:02:37.550 --> 00:02:41.340
the dark ages of computer vision, 1981,
which is not quite the dark, dark age.

00:02:41.340 --> 00:02:42.930
It was the dawning of it.

00:02:42.930 --> 00:02:44.930
The dark ages were in the 60s.

00:02:44.930 --> 00:02:46.420
All right, we just did that.

00:02:46.420 --> 00:02:49.490
We can solve our squares and
come up with a solution, but

00:02:49.490 --> 00:02:53.490
let's understand exactly what
solving this means, okay.

00:02:53.490 --> 00:02:55.360
So you remember the aperture problem,
right?

00:02:55.360 --> 00:02:57.040
And so here it's drawn out.

00:02:57.040 --> 00:03:01.190
That the idea is if I have
a gradient in some direction, and so

00:03:01.190 --> 00:03:03.100
this is my little gradient there.

00:03:03.100 --> 00:03:03.630
Right?
So

00:03:03.630 --> 00:03:09.060
that any u v that's along this
line would be an acceptable u v.

00:03:09.060 --> 00:03:13.000
That is any u v whose component in
the direction of the gradient would be

00:03:13.000 --> 00:03:13.550
acceptable.

00:03:13.550 --> 00:03:14.510
And that's what this says.

00:03:14.510 --> 00:03:17.020
That there's a single equation for that.

00:03:17.020 --> 00:03:19.550
And that's the equation
of a line in uv space.

