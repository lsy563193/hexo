WEBVTT
Kind: captions
Language: en

00:00:00.240 --> 00:00:04.620
So now we can start to talk about sampling and aliasing.

00:00:04.620 --> 00:00:07.540
So before we do that, we have to talk about the notion of sampling at all and

00:00:07.540 --> 00:00:10.330
the notion, and, and the idea of reconstruction.

00:00:10.330 --> 00:00:14.540
So here we have a the idea of some nice smooth scene illuminated by

00:00:14.540 --> 00:00:17.850
a light source and then we have an imaging system that

00:00:17.850 --> 00:00:21.770
captures the intensity at a bunch of discrete places.

00:00:21.770 --> 00:00:25.680
And of course, what we'd like to do, is we'd like to take the captures from

00:00:25.680 --> 00:00:31.000
these discrete places, and be able to reconstruct this nice, smooth signal.

00:00:31.000 --> 00:00:33.200
That is to know what that signal is.

00:00:33.200 --> 00:00:35.550
Let's talk a little bit about sampling.

00:00:35.550 --> 00:00:38.400
Sampling arises when we come up with this notion of,

00:00:38.400 --> 00:00:42.740
how do you store a continuous signal in a computer, right?

00:00:42.740 --> 00:00:45.430
So here we have a continuous signal, and this is in 1D, and

00:00:45.430 --> 00:00:48.730
we're going to do a lot of our stuff in 1D today because it's easier to draw.

00:00:48.730 --> 00:00:53.050
And so the obvious way of representing that, it's actually not

00:00:53.050 --> 00:00:56.300
the only way because you can imagine different clever basis kinds of things,

00:00:56.300 --> 00:00:59.950
but sort of a, a normal way of thinking about that is by samples.

00:00:59.950 --> 00:01:04.099
That is, you just take the samples at each different location and

00:01:04.099 --> 00:01:06.760
you write down what the value is.

00:01:06.760 --> 00:01:10.310
And once you have that set of samples later what you want to do

00:01:10.310 --> 00:01:14.060
is reconstruct what the original signal was, right?

00:01:14.060 --> 00:01:15.250
And why do you want to do this?

00:01:15.250 --> 00:01:19.610
Well, maybe you actually want to use the signal, you want to play it.

00:01:19.610 --> 00:01:22.070
If this is audio, you want to play it through a speaker.

00:01:22.070 --> 00:01:24.770
And I don't need samples, I need a continuous voltage.

00:01:24.770 --> 00:01:26.620
Or maybe I want to do some sort of analysis or

00:01:26.620 --> 00:01:30.910
a mathematical processing in terms of thinking about what this signal is.

00:01:30.910 --> 00:01:34.270
So essentially, what you have to do is you have to

00:01:34.270 --> 00:01:39.110
guess what's going on between each of the samples.

00:01:39.110 --> 00:01:39.960
That's all you can do.

00:01:39.960 --> 00:01:43.040
You have the samples at discrete places but

00:01:43.040 --> 00:01:45.210
you need to connect the dots if you will.

00:01:45.210 --> 00:01:46.610
You need to fill in what's going on.

00:01:46.610 --> 00:01:49.660
And a lot of what we're going to be talking about today has to do with

00:01:49.660 --> 00:01:53.290
what's actually going on, when you think about taking a set of samples and

00:01:53.290 --> 00:01:56.310
then trying to guess what's in between.

00:01:56.310 --> 00:01:59.830
So to illustrate most of these points we're going to use a 1B signal, so

00:01:59.830 --> 00:02:02.120
you think of this like audio, all right?

00:02:02.120 --> 00:02:03.720
So here's an interesting audio signal.

00:02:03.720 --> 00:02:04.430
You see this signal?

00:02:04.430 --> 00:02:07.710
This, so this is time, okay, it goes this way.

00:02:08.930 --> 00:02:11.790
And it starts off with a low frequency and it gets higher and higher and

00:02:11.790 --> 00:02:13.290
higher and higher, higher, higher and stops.

00:02:14.320 --> 00:02:19.180
All right, if you were to play that sound, you would hear what's called a chirp.

00:02:19.180 --> 00:02:20.160
Okay, it's actually what it's called,

00:02:20.160 --> 00:02:22.650
it's called a chirp, it comes from radar, et cetera, whatever.

00:02:22.650 --> 00:02:26.620
It's something that has power in lots of different frequencies so

00:02:26.620 --> 00:02:30.510
when you send a chirp out, no matter what the frequency response of

00:02:30.510 --> 00:02:34.940
the thing you might be hitting is, you'll get something back.

00:02:34.940 --> 00:02:37.630
It also, it, it's also a nice way being able to localize it.

00:02:37.630 --> 00:02:40.040
There are lots of good reasons to use what's called a chirp.

00:02:40.040 --> 00:02:43.900
But here's a chirp that has higher and higher frequencies.

00:02:43.900 --> 00:02:47.050
But it's a good signal to think about looking at aliasing.

