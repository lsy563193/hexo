WEBVTT
Kind: captions
Language: en

00:00:00.310 --> 00:00:02.340
Any given model type, so

00:00:02.340 --> 00:00:06.970
whether it's a line or transform,
they have what's known as a minimal set.

00:00:06.970 --> 00:00:10.770
The minimal set is
the smallest number of samples

00:00:10.770 --> 00:00:13.380
from which the model can be computed.

00:00:13.380 --> 00:00:15.440
So for a line, how many points is that?

00:00:15.440 --> 00:00:17.170
Well, two, all right?

00:00:17.170 --> 00:00:20.510
But what about transforms, when we're
transforming one image to the next?

00:00:21.680 --> 00:00:23.990
Image transforms are just models.

00:00:23.990 --> 00:00:28.210
So what is the minimal set
of our different transforms?

00:00:28.210 --> 00:00:30.190
Well, first of all,
what are we sampling from?

00:00:30.190 --> 00:00:33.350
Well, we're sampling
from proposed matches.

00:00:33.350 --> 00:00:36.790
Corresponding pairs of points, okay?

00:00:36.790 --> 00:00:42.210
So suppose I think that one image is
just translated of another image.

00:00:42.210 --> 00:00:45.130
So the transformation is a translation.

00:00:45.130 --> 00:00:47.330
How many pairs do I need?

00:00:47.330 --> 00:00:49.100
One.
Because if you tell me where

00:00:49.100 --> 00:00:51.530
this point a is in this other image,

00:00:51.530 --> 00:00:56.000
I now know the translational
shift between any two points.

00:00:56.000 --> 00:00:59.470
Another way of thinking about that is
I need a delta x and a delta y, and

00:00:59.470 --> 00:01:01.975
you give me two, an x and a y match.

00:01:01.975 --> 00:01:06.060
So I know what delta x is, I do this
complicated thing called subtract, and

00:01:06.060 --> 00:01:07.610
I do it on y and that's my offset.

00:01:07.610 --> 00:01:10.920
Okay, homography,
ooh we talked about this.

00:01:10.920 --> 00:01:14.630
How many pairs of corresponding points
do we need to compute a homography?

00:01:14.630 --> 00:01:17.620
Do you remember,
paying attention out there?

00:01:17.620 --> 00:01:18.680
Four, Megan got it right.

00:01:18.680 --> 00:01:21.030
How about a fundamental matrix?

00:01:21.030 --> 00:01:24.670
We showed you something called
the eight point algorithm that said

00:01:24.670 --> 00:01:28.580
if you had eight points, corresponding
pairs, you can compute that.

00:01:29.600 --> 00:01:31.680
By the way, it's actually seven.

00:01:31.680 --> 00:01:33.720
We didn't really talk
too much about that.

00:01:33.720 --> 00:01:35.730
Do you remember when with eight
points we could solve for

00:01:35.730 --> 00:01:39.100
the fundamental matrix, but then you
would sometimes end up with a rank

00:01:39.100 --> 00:01:42.580
three fundamental matrix so
you had to reduce it down to a rank two?

00:01:42.580 --> 00:01:46.400
We did that whole getting rid
of the smallest icon value.

00:01:46.400 --> 00:01:49.000
That's because there's actually
fewer degrees of freedom.

00:01:49.000 --> 00:01:52.670
So in principle you can do
it with seven points, but

00:01:52.670 --> 00:01:54.640
we're just going to think
of it as eight points.

00:01:54.640 --> 00:01:58.500
So the idea is, for translation I need
one pair, for a homography I need four

00:01:58.500 --> 00:02:02.150
pairs, for a fundamental matrix
I need seven or eight pairs.

00:02:02.150 --> 00:02:06.050
This is the minimal set that it
takes to compute these things.

00:02:06.050 --> 00:02:09.229
Then you can write down
the general RANSAC algorithm.

00:02:09.229 --> 00:02:16.200
Randomly select, it says s points or
point pairs, s elements of a sample set.

00:02:16.200 --> 00:02:21.040
So you form a sample by pulling
out s things that you need.

00:02:21.040 --> 00:02:22.620
You instantiate your model.

00:02:22.620 --> 00:02:26.440
So you either draw your line or compute
your homography, whatever it is you do.

00:02:26.440 --> 00:02:29.760
And then you get a consensus set,
C sub i.

00:02:29.760 --> 00:02:33.700
And these are the points that
are sort of within the error bounds.

00:02:33.700 --> 00:02:39.000
So if you think of homography,
homography maps this image to that

00:02:39.000 --> 00:02:44.710
image, and I can see are all these
points map, how many of the proposed

00:02:44.710 --> 00:02:49.230
matches now land in the same place
that they said they came from?

00:02:49.230 --> 00:02:51.690
That's the number of inliers.

00:02:51.690 --> 00:02:55.630
And, in fact,
you might even terminate this algorithm

00:02:55.630 --> 00:02:58.870
as soon as that consensus
set is big enough.

00:02:58.870 --> 00:03:01.840
Or you might just repeat it for
n times and

00:03:01.840 --> 00:03:06.310
then you return whichever model
gave you the biggest set.

00:03:06.310 --> 00:03:09.680
So that's the general RANSAC algorithm.

00:03:09.680 --> 00:03:11.980
And of course, like any other algorithm,

00:03:11.980 --> 00:03:17.100
there are some parameters to be chosen
in order to make this thing work.

00:03:17.100 --> 00:03:20.160
So the first parameter is this number s,
the minimal set.

00:03:20.160 --> 00:03:22.290
This how big is the minimal set.

00:03:22.290 --> 00:03:25.970
That number is actually usually set by
whatever model you're using, right?

00:03:25.970 --> 00:03:27.690
So if you're fitting
lines that number is two.

00:03:27.690 --> 00:03:30.880
If you're doing homographies
that number is four, four pairs.

00:03:30.880 --> 00:03:32.470
So that's set by the model.

00:03:32.470 --> 00:03:36.100
A little more problematic was
this distance threshold t, or

00:03:36.100 --> 00:03:41.410
delta as wrote in the Greek,
of saying how far away

00:03:41.410 --> 00:03:47.870
from the model that you're computing
is excitable to be an inlier.

00:03:47.870 --> 00:03:49.260
So let's look at that
one just a little bit.

