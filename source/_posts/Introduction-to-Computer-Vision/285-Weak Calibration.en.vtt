WEBVTT
Kind: captions
Language: en

00:00:00.560 --> 00:00:03.590
Let's talk about it's going to call it weak calibration, and

00:00:03.590 --> 00:00:09.370
what I mean by that is we're just assuming that we've got two projected cameras.

00:00:09.370 --> 00:00:11.410
So that they're going to behave like projected cameras, but

00:00:11.410 --> 00:00:15.610
in particular, we don't know anything about focal length or, or their offsets.

00:00:15.610 --> 00:00:20.100
But we are going to assume, for example, that we don't have radial distortion.

00:00:20.100 --> 00:00:24.130
We're going to assume that we don't have a non-uniform stretch of the image.

00:00:24.130 --> 00:00:27.600
So, but what it's say weekly calibrated that's all we mean.

00:00:27.600 --> 00:00:28.550
We correct for that.

00:00:28.550 --> 00:00:33.610
So the main idea is that we're going to estimate the epipolar geometry

00:00:33.610 --> 00:00:39.250
from a set of corresponding points between uncalibrated camera images.

00:00:39.250 --> 00:00:40.370
And we'll probably use a large set, so

00:00:40.370 --> 00:00:43.590
it's going to be somewhat redundant in order to make this thing more robust with

00:00:43.590 --> 00:00:45.190
respect to noise.

00:00:45.190 --> 00:00:47.235
All right, so let's get started.

00:00:47.235 --> 00:00:52.970
So before, from our all our projection stuff, you'll remember that

00:00:52.970 --> 00:00:58.191
we had this projection that went from a world coordinate through our

00:00:58.191 --> 00:01:03.501
extrinsics to our intrinsics to a projective representation of the image

00:01:03.501 --> 00:01:10.180
coordinate right and so to get the non-homogenous you had to divide through.

00:01:10.180 --> 00:01:14.990
So it's written here like the it's a scale w times the image point is

00:01:14.990 --> 00:01:20.160
equal to the world point times our extrinsics times our intrinsics.

00:01:20.160 --> 00:01:23.820
So phi is just as we did before, we're going to use a three by

00:01:23.820 --> 00:01:28.701
four version here since K will be a three by three, where the left hand side is

00:01:28.701 --> 00:01:33.967
that rotation matrix and the right hand side is the transformed translation and,

00:01:33.967 --> 00:01:38.883
and you'll notice this slightly weird form written here of it's r times t.

00:01:38.883 --> 00:01:41.677
And all that's saying is that if you know the translation in

00:01:41.677 --> 00:01:44.575
one frame you might have to translate, you might have to express in

00:01:44.575 --> 00:01:48.210
the other frame depending exactly on how you're, you're doing this.

00:01:48.210 --> 00:01:50.970
Don't, don't worry about that detail, okay?

00:01:50.970 --> 00:01:54.010
So that's phi, our extrinsic parameter matrix.

00:01:54.010 --> 00:01:58.280
And K if you remember, that's our intrinsic calibration matrix.

00:01:58.280 --> 00:02:03.210
And the K that I'm showing you here has a focal length and an x scale and

00:02:03.210 --> 00:02:06.180
a y scale and of course as we said before they're multiplied together.

00:02:06.180 --> 00:02:10.258
You really only need two numbers you've got f divided by sx and

00:02:10.258 --> 00:02:13.640
f divided by sy, so they, they always appear in multiples like that.

00:02:13.640 --> 00:02:15.680
But we have a scale in both directions.

00:02:15.680 --> 00:02:17.460
We have the offsets.

00:02:17.460 --> 00:02:19.280
But what we don't have is,

00:02:19.280 --> 00:02:22.920
we don't have any skew, that is that this value here is 0.

00:02:22.920 --> 00:02:25.470
That makes this math a little bit easier and

00:02:25.470 --> 00:02:31.410
as I said before in general for modern cameras skew just isn't an issue.

00:02:31.410 --> 00:02:32.160
All right.

00:02:32.160 --> 00:02:35.210
So I'm going to write that this way.

00:02:35.210 --> 00:02:36.720
The point in the image,

00:02:36.720 --> 00:02:42.190
and this is a homogeneous point, is a point in the world times our,

00:02:42.190 --> 00:02:46.580
multiplied by the extrinsic matrix, multiplied by the intrinsic matrix.

00:02:46.580 --> 00:02:52.370
But this, of course, is just the world point put through the extrinsics,

00:02:52.370 --> 00:02:54.340
that is the location of the point.

00:02:54.340 --> 00:02:57.760
It's a 3D point, but it's in the camera frame.

00:02:57.760 --> 00:03:00.480
Remember that the extrinsic matrix maps us from

00:03:00.480 --> 00:03:05.360
some arbitrary world frame into the 3D frame of the, of the camera.

00:03:05.360 --> 00:03:07.560
Okay, so that, we're going to call that pc.

00:03:07.560 --> 00:03:11.840
And so we can write down this very simple relationship that K,

00:03:11.840 --> 00:03:17.570
the intrinsics here, maps us from the point in the camera coordinate

00:03:17.570 --> 00:03:23.000
system to the homogeneous point in the image, okay?

00:03:23.000 --> 00:03:28.440
So p in the image is equal to K intrinsic times p in the world.

00:03:28.440 --> 00:03:30.790
It's the point in the world, but expressed in the camera frame.

