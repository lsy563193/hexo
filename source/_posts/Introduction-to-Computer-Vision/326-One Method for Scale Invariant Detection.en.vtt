WEBVTT
Kind: captions
Language: en

00:00:00.250 --> 00:00:04.630
So imagine at a point, you compute one of these scale and variant functions like

00:00:04.630 --> 00:00:09.380
average intensity, over a range of neighborhood sizes, okay?

00:00:09.380 --> 00:00:11.730
So, we're, we're at a single point and

00:00:11.730 --> 00:00:15.770
we're computing this function f over different region sizes.

00:00:15.770 --> 00:00:18.510
And you'll notice that, well it goes down, and then it goes up, and

00:00:18.510 --> 00:00:19.500
then it goes down again.

00:00:19.500 --> 00:00:25.440
So that's my function that I computed over different region sizes, all right?

00:00:25.440 --> 00:00:31.890
Now, let's suppose in my next picture I shrink the thing down by half.

00:00:31.890 --> 00:00:37.130
Well now, as I compute that same function over the same region sizes,

00:00:37.130 --> 00:00:38.840
two, four, eight, 16, right?

00:00:38.840 --> 00:00:42.940
It's going to take the same shape, but it's going to get there faster.

00:00:42.940 --> 00:00:47.630
Which is why this function is essentially just a squashed version of

00:00:47.630 --> 00:00:48.800
the one on the left.

00:00:48.800 --> 00:00:52.370
But it's the same function, just squashed.

00:00:52.370 --> 00:00:53.450
Ha.

00:00:53.450 --> 00:00:58.132
Well, what that means is, suppose we pick the maximum of that function.

00:00:58.132 --> 00:01:02.010
I'm going to call that S1 in the, in image 1 on the left.

00:01:02.010 --> 00:01:05.770
And I take the same function and I'm at some other point.

00:01:05.770 --> 00:01:09.340
I'm same, same function on the point of the second image.

00:01:09.340 --> 00:01:12.990
If I were to take the maximum there, it would be a different size, right?

00:01:12.990 --> 00:01:15.140
Because that image had been squished in half.

00:01:15.140 --> 00:01:16.780
That would be S2.

00:01:16.780 --> 00:01:22.530
But these two neighborhood sizes would be covering the same

00:01:22.530 --> 00:01:27.030
region of the image between the two pictures.

00:01:27.030 --> 00:01:29.980
So they would be matching scales.

00:01:29.980 --> 00:01:34.620
So, the important thing is, I do each one of these things independently.

00:01:34.620 --> 00:01:37.680
That is, I do this thing and at this particular point,

00:01:37.680 --> 00:01:41.350
I find my maximum function my, my maximum of the function.

00:01:41.350 --> 00:01:44.540
I say that's the natural scale size that I'm going to use.

00:01:44.540 --> 00:01:46.650
Then I come over here and I go to my other image.

00:01:46.650 --> 00:01:48.040
And I do over here, and

00:01:48.040 --> 00:01:51.110
I'm at some interest point, remember we found our interest points.

00:01:51.110 --> 00:01:54.200
And I look over all these different region sizes, and I say, aha!

00:01:54.200 --> 00:01:57.510
This is the scale there, and I compute that function, and

00:01:57.510 --> 00:02:02.110
magically, these two scales correspond.

00:02:02.110 --> 00:02:05.490
These are the same chunk of image.

00:02:05.490 --> 00:02:07.310
Here's a very nice illustration of that.

00:02:07.310 --> 00:02:11.056
Here's a picture of probably some beautiful church on the inside here,

00:02:11.056 --> 00:02:11.816
it says white and

00:02:11.816 --> 00:02:15.760
gray, in some church, in some mountainous area in Europe I'm going to guess.

00:02:15.760 --> 00:02:19.760
And you'll notice that there's a function here that we're computing,

00:02:19.760 --> 00:02:24.120
that's a function of scale and here it is, and this is the maximum point.

00:02:24.120 --> 00:02:31.060
And this circle is meant to reflect the scale size of that maximum.

00:02:31.060 --> 00:02:36.490
Here we have that same image zoomed way out, computing at this interest point,

00:02:36.490 --> 00:02:37.650
so we've got the same interest point.

00:02:37.650 --> 00:02:39.800
So, notice that this interest point is just sitting at the top of

00:02:39.800 --> 00:02:41.430
this little chimney thing here.

00:02:41.430 --> 00:02:43.530
We compute the function again, and

00:02:43.530 --> 00:02:48.370
again, we take the maximum, and that's going to be this circle.

00:02:48.370 --> 00:02:53.580
And the really cool thing, is that this circle, and this circle,

00:02:53.580 --> 00:02:56.570
are the same components of the image.

00:02:56.570 --> 00:02:59.330
Those are the two scales to operate at.

00:02:59.330 --> 00:03:04.070
If we want to find descriptors that match, that's coming later.

00:03:04.070 --> 00:03:09.720
Basically, the scale of my detectors in one image should be big and

00:03:09.720 --> 00:03:11.700
in the other image should be small.

00:03:11.700 --> 00:03:15.300
Also the scale of my my descriptors and my detectors.

