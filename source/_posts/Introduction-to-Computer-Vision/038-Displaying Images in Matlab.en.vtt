WEBVTT
Kind: captions
Language: en

00:00:00.440 --> 00:00:04.320
I didn't say in the previous image what the range of

00:00:04.320 --> 00:00:06.960
our pictures would tend to be, okay?

00:00:08.620 --> 00:00:11.461
Remember I told you an image might go from, you know, 0 to 1.

00:00:11.461 --> 00:00:15.010
And that would be from the darkest black to the brightest white.

00:00:15.010 --> 00:00:18.600
Well, if I did that and I had a sigma of two.

00:00:18.600 --> 00:00:20.329
You would get black and white all over the place.

00:00:20.329 --> 00:00:24.380
And yet, when I go back here, sigma of two is just a small variation.

00:00:24.380 --> 00:00:26.660
Whereas sigma of 64 was a big variation.

00:00:26.660 --> 00:00:27.300
Why?

00:00:27.300 --> 00:00:33.750
In this image, we have this notion of maybe minus 127 was black and

00:00:33.750 --> 00:00:36.460
plus 128 was white.

00:00:36.460 --> 00:00:42.070
When we talk about the amount of noise in an image in terms of the intensity.

00:00:42.070 --> 00:00:46.380
It has to be with respect to sort of what's the overall range.

00:00:46.380 --> 00:00:50.090
So another reason to use doubles in your images.

00:00:50.090 --> 00:00:53.980
And to think of them as going from 0 to 1, then we can talk about a sigma of,

00:00:53.980 --> 00:00:55.080
you know, 0.1.

00:00:55.080 --> 00:00:58.370
Well, that's a tenth of sort of going from black to white.

00:00:58.370 --> 00:01:01.470
If you want to use something arbitrary like 0 to 255.

00:01:01.470 --> 00:01:03.110
You can do that.

00:01:03.110 --> 00:01:07.570
First of all, use 0.0 to 255.0, so use a floating-point number.

00:01:07.570 --> 00:01:11.970
And then you're going to have to say, okay, I guess a sigma of 0.1 in one case

00:01:11.970 --> 00:01:15.870
would be a sigma of, like, 25 in another case.

00:01:15.870 --> 00:01:17.540
Right, because I've stretched the whole thing out.

00:01:17.540 --> 00:01:20.380
So you have to worry about the magnitude of sigma with respect to

00:01:20.380 --> 00:01:21.520
the overall range of your image.

00:01:23.058 --> 00:01:29.454
This will c, catch you number, numerous times when you go to display an image.

00:01:29.454 --> 00:01:32.620
All right, because now you have to tell the machine, okay I've got this image.

00:01:32.620 --> 00:01:34.620
How do you want it displayed?

00:01:34.620 --> 00:01:37.630
Matlab has a large number of ways of displaying images.

00:01:37.630 --> 00:01:40.210
If you have the imshow function which I think

00:01:40.210 --> 00:01:42.790
actually comes from the Image Processing Toolbox.

00:01:42.790 --> 00:01:45.913
You can show it this way where you'd tell it low and high.

00:01:45.913 --> 00:01:49.385
And it will display, anything with the value low or

00:01:49.385 --> 00:01:53.522
lower as black, anything higher than high as white, okay?

00:01:53.522 --> 00:01:58.342
You can also do imshow and just give it this empty array.

00:01:58.342 --> 00:02:01.055
And it will scale the image for you automatically.

00:02:01.055 --> 00:02:03.221
That is, it'll find the minimum value in the image and

00:02:03.221 --> 00:02:05.120
say, okay, that's going to be black.

00:02:05.120 --> 00:02:05.920
It'll find the maximum.

00:02:05.920 --> 00:02:08.350
It'll say, that'll be white, and it'll scale you.

00:02:08.350 --> 00:02:12.620
There's another function called imagesc, for image scale.

00:02:12.620 --> 00:02:14.280
It's a much older function.

00:02:14.280 --> 00:02:18.450
It's not in Image Processing Toolbox, which will also display it.

00:02:18.450 --> 00:02:23.220
Don't get caught between this question of how I display an image versus how I

00:02:23.220 --> 00:02:24.180
use an image.

00:02:24.180 --> 00:02:27.490
Just I just finished teaching part of this course here at Georgia Tech.

00:02:27.490 --> 00:02:30.120
I had some people doing, computing some gradients.

00:02:30.120 --> 00:02:33.360
They computed some gradients, which involves substructions and derivatives and

00:02:33.360 --> 00:02:34.390
all that stuff.

00:02:34.390 --> 00:02:38.130
And then one guy, he normalized his picture to go from 0 to 255,

00:02:38.130 --> 00:02:40.600
before he computed with it.

00:02:42.170 --> 00:02:45.460
You would only normalize it in order to display it,

00:02:45.460 --> 00:02:46.860
not in order to compute with it.

